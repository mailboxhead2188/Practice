{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1","program":"/home/mailboxhead/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","parking_lot","/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"owning_ref\"","-C","metadata=91c328495606b737","-C","extra-filename=-91c328495606b737","--out-dir","/home/mailboxhead/Documents/Practice/rust/itemRestAPI/target/rls/debug/deps","-L","dependency=/home/mailboxhead/Documents/Practice/rust/itemRestAPI/target/rls/debug/deps","--extern","lock_api=/home/mailboxhead/Documents/Practice/rust/itemRestAPI/target/rls/debug/deps/liblock_api-0bee8950029745da.rmeta","--extern","parking_lot_core=/home/mailboxhead/Documents/Practice/rust/itemRestAPI/target/rls/debug/deps/libparking_lot_core-fba423d68ab8d16d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mailboxhead/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mailboxhead/Documents/Practice/rust/itemRestAPI/target/rls/debug/deps/libparking_lot-91c328495606b737.rmeta"},"prelude":{"crate_id":{"name":"parking_lot","disambiguator":[12935018850327390659,11681449302384405597]},"crate_root":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src","external_crates":[{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2594238449109249778,14329309369942547729]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6503247931848546176,1684418909180686813]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12451946389938577567,11203303662954104394]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1980447069504536921,3328628698406129621]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12646337250972192980,14741535903817127298]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6547188996294224928,5691309307804124990]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8434992999023788514,9924743992558281294]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9570316717324644387,455490368103514481]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9725046304266191696,732117948258334845]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15757291058253571364,14776181557494283724]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[17193492906632091848,9648904290961885593]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[1536109248242447287,7096802547945386663]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[12392439143515031309,6276839144763171432]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16161037957650153464,14997937726110536761]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":15,"id":{"name":"lock_api","disambiguator":[8334295480522791063,14887626275658319885]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":16,"id":{"name":"scopeguard","disambiguator":[13991068350673808078,9323414459685869206]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":17,"id":{"name":"owning_ref","disambiguator":[8236565871648894456,6328449295017873103]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":18,"id":{"name":"stable_deref_trait","disambiguator":[696970236429249949,11490798712664427412]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":19,"id":{"name":"parking_lot_core","disambiguator":[12572233907960154199,627259558243801885]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":20,"id":{"name":"rand","disambiguator":[17615674391866392809,17374651525112198776]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":21,"id":{"name":"rand_jitter","disambiguator":[15825094663305170200,4844640419978596228]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":22,"id":{"name":"rand_core","disambiguator":[2929965251618237767,6027955857371435438]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":23,"id":{"name":"rand_os","disambiguator":[4454164925176199622,8584872302322408916]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":24,"id":{"name":"libc","disambiguator":[3200462113004473706,11542650947192121150]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":25,"id":{"name":"rand_isaac","disambiguator":[4201284397121179002,6342820675723415163]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":26,"id":{"name":"rand_core","disambiguator":[7387099348852153983,15660077700193297027]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":27,"id":{"name":"rand_chacha","disambiguator":[8253342629496979403,17798051219753097512]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":28,"id":{"name":"rand_hc","disambiguator":[10313132303312340566,10258088852929640642]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":29,"id":{"name":"rand_pcg","disambiguator":[17066119202040410813,11548889494988047187]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":30,"id":{"name":"rand_xorshift","disambiguator":[14888632303310100073,3496250414514701820]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","num":31,"id":{"name":"smallvec","disambiguator":[8618869410220265650,17957632788773669014]}}],"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":333,"byte_end":1530,"line_start":8,"line_end":45,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1102,"byte_end":1109,"line_start":36,"line_end":36,"column_start":19,"column_end":26},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1111,"byte_end":1128,"line_start":36,"line_end":36,"column_start":28,"column_end":45},"alias_span":null,"name":"WaitTimeoutResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1147,"byte_end":1163,"line_start":37,"line_end":37,"column_start":17,"column_end":33},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1165,"byte_end":1170,"line_start":37,"line_end":37,"column_start":35,"column_end":40},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":82},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1172,"byte_end":1182,"line_start":37,"line_end":37,"column_start":42,"column_end":52},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1200,"byte_end":1204,"line_start":38,"line_end":38,"column_start":16,"column_end":20},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":421},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1206,"byte_end":1215,"line_start":38,"line_end":38,"column_start":22,"column_end":31},"alias_span":null,"name":"OnceState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1217,"byte_end":1226,"line_start":38,"line_end":38,"column_start":33,"column_end":42},"alias_span":null,"name":"ONCE_INIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1248,"byte_end":1256,"line_start":39,"line_end":39,"column_start":20,"column_end":28},"alias_span":null,"name":"RawMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1278,"byte_end":1287,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"alias_span":null,"name":"RawRwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1307,"byte_end":1332,"line_start":41,"line_end":41,"column_start":19,"column_end":44},"alias_span":null,"name":"MappedReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1334,"byte_end":1345,"line_start":41,"line_end":41,"column_start":46,"column_end":57},"alias_span":null,"name":"RawThreadId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":338},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1347,"byte_end":1361,"line_start":41,"line_end":41,"column_start":59,"column_end":73},"alias_span":null,"name":"ReentrantMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":340},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1363,"byte_end":1382,"line_start":41,"line_end":41,"column_start":75,"column_end":94},"alias_span":null,"name":"ReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":357},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1407,"byte_end":1428,"line_start":43,"line_end":43,"column_start":5,"column_end":26},"alias_span":null,"name":"MappedRwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1430,"byte_end":1452,"line_start":43,"line_end":43,"column_start":28,"column_end":50},"alias_span":null,"name":"MappedRwLockWriteGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":349},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1454,"byte_end":1460,"line_start":43,"line_end":43,"column_start":52,"column_end":58},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1462,"byte_end":1477,"line_start":43,"line_end":43,"column_start":60,"column_end":75},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":363},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1483,"byte_end":1508,"line_start":44,"line_end":44,"column_start":5,"column_end":30},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":1510,"byte_end":1526,"line_start":44,"line_end":44,"column_start":32,"column_end":48},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":333,"byte_end":1530,"line_start":8,"line_end":45,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":66},{"krate":0,"index":77},{"krate":0,"index":88},{"krate":0,"index":138},{"krate":0,"index":190},{"krate":0,"index":327},{"krate":0,"index":346},{"krate":0,"index":366},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":390},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":401}],"decl_id":null,"docs":" This library provides implementations of `Mutex`, `RwLock`, `Condvar` and\n `Once` that are smaller, faster and more flexible than those in the Rust\n standard library. It also provides a `ReentrantMutex` type.\n","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/lib.rs","byte_start":553,"byte_end":575,"line_start":12,"line_end":12,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":408},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2362,"byte_end":2379,"line_start":21,"line_end":21,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type indicating whether a timed wait on a condition variable returned\n due to a time out or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2500,"byte_end":2509,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2479,"byte_end":2488,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4660,"byte_end":4667,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":41}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5139,"byte_end":5142,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<Condvar>::new","value":"fn () -> Condvar","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable which is ready to be waited on and\n notified.\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"nightly\"))","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5081,"byte_end":5113,"line_start":101,"line_end":101,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5118,"byte_end":5127,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5968,"byte_end":5978,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked thread on this condvar.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":5947,"byte_end":5956,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8452,"byte_end":8462,"line_start":195,"line_end":195,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked threads on this condvar.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":8431,"byte_end":8440,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11496,"byte_end":11500,"line_start":266,"line_end":266,"column_start":12,"column_end":16},"name":"wait","qualname":"<Condvar>::wait","value":"fn <T> (&self, mutex_guard: &mut MutexGuard<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until this condition variable receives a\n notification.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":11475,"byte_end":11484,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12771,"byte_end":12781,"line_start":294,"line_end":294,"column_start":12,"column_end":22},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"fn <T> (&self, mutex_guard: &mut MutexGuard<T>, timeout: Instant) -> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after\n the specified time instant.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":12750,"byte_end":12759,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17171,"byte_end":17179,"line_start":398,"line_end":398,"column_start":12,"column_end":20},"name":"wait_for","qualname":"<Condvar>::wait_for","value":"fn <T> (&self, mutex_guard: &mut MutexGuard<T>, timeout: Duration) -> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a\n specified duration.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17150,"byte_end":17159,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":69},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/elision.rs","byte_start":24950,"byte_end":24957,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"IntType","qualname":"::elision::AtomicElisionExt::IntType","value":"type IntType;","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":80},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33229,"byte_end":33234,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"name":"Mutex","qualname":"::mutex::Mutex","value":"lock_api::Mutex<RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutual exclusion primitive useful for protecting shared data","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33549,"byte_end":33559,"line_start":95,"line_end":95,"column_start":10,"column_end":20},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"lock_api::MutexGuard<'a, RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":85},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/mutex.rs","byte_start":33983,"byte_end":33999,"line_start":104,"line_end":104,"column_start":10,"column_end":26},"name":"MappedMutexGuard","qualname":"::mutex::MappedMutexGuard","value":"lock_api::MappedMutexGuard<'a, RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `MutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":422},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40050,"byte_end":40053,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"name":"New","qualname":"::once::OnceState::New","value":"OnceState::New","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" A closure has not been executed yet\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":424},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40105,"byte_end":40113,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"Poisoned","qualname":"::once::OnceState::Poisoned","value":"OnceState::Poisoned","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" A closure was executed but panicked.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":426},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40171,"byte_end":40181,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"InProgress","qualname":"::once::OnceState::InProgress","value":"OnceState::InProgress","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" A thread is currently executing a closure.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":428},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40234,"byte_end":40238,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Done","qualname":"::once::OnceState::Done","value":"OnceState::Done","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" A closure has completed successfully.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":421},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":39990,"byte_end":39999,"line_start":31,"line_end":31,"column_start":10,"column_end":19},"name":"OnceState","qualname":"::once::OnceState","value":"OnceState::{New, Poisoned, InProgress, Done}","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428}],"decl_id":null,"docs":" Current state of a `Once`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40518,"byte_end":40526,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"poisoned","qualname":"<OnceState>::poisoned","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has been poisoned.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40497,"byte_end":40506,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40764,"byte_end":40768,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"done","qualname":"<OnceState>::done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has successfully executed a\n closure.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40743,"byte_end":40752,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":110},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41602,"byte_end":41606,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"Once","qualname":"::once::Once","value":"","parent":null,"children":[],"decl_id":null,"docs":" A synchronization primitive which can be used to run a one-time\n initialization. Useful for one-time initialization for globals, FFI or\n related functionality.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":113},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41680,"byte_end":41689,"line_start":95,"line_end":95,"column_start":11,"column_end":20},"name":"ONCE_INIT","qualname":"::once::ONCE_INIT","value":"Once","parent":null,"children":[],"decl_id":null,"docs":" Initialization value for static `Once` values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41982,"byte_end":41985,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<Once>::new","value":"fn () -> Once","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Once` value.\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"nightly\"))","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41924,"byte_end":41956,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41961,"byte_end":41970,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42109,"byte_end":42114,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"state","qualname":"<Once>::state","value":"fn (&self) -> OnceState","parent":null,"children":[],"decl_id":null,"docs":" Returns the current state of this `Once`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":42088,"byte_end":42097,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44398,"byte_end":44407,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"call_once","qualname":"<Once>::call_once","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs an initialization routine once and only once. The given closure\n will be executed if this is the first time `call_once` has been called,\n and otherwise the routine will *not* be invoked.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":44377,"byte_end":44386,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":45158,"byte_end":45173,"line_start":199,"line_end":199,"column_start":12,"column_end":27},"name":"call_once_force","qualname":"<Once>::call_once_force","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the same function as `call_once` except ignores poisoning.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":45137,"byte_end":45146,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":55165,"byte_end":55173,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"RawMutex","qualname":"::raw_mutex::RawMutex","value":"RawMutex {  }","parent":null,"children":[{"krate":0,"index":165}],"decl_id":null,"docs":" Raw mutex type backed by the parking lot.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":236},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":65766,"byte_end":65775,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"RawRwLock","qualname":"::raw_rwlock::RawRwLock","value":"RawRwLock {  }","parent":null,"children":[{"krate":0,"index":237}],"decl_id":null,"docs":" Raw reader-writer lock type backed by the parking lot.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":332},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113125,"byte_end":113136,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"RawThreadId","qualname":"::remutex::RawThreadId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":338},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114025,"byte_end":114039,"line_start":36,"line_end":36,"column_start":10,"column_end":24},"name":"ReentrantMutex","qualname":"::remutex::ReentrantMutex","value":"lock_api::ReentrantMutex<RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutex which can be recursively locked by a single thread.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":340},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114370,"byte_end":114389,"line_start":43,"line_end":43,"column_start":10,"column_end":29},"name":"ReentrantMutexGuard","qualname":"::remutex::ReentrantMutexGuard","value":"lock_api::ReentrantMutexGuard<'a, RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure\n is dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":343},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":114862,"byte_end":114887,"line_start":52,"line_end":52,"column_start":10,"column_end":35},"name":"MappedReentrantMutexGuard","qualname":"::remutex::MappedReentrantMutexGuard","value":"lock_api::MappedReentrantMutexGuard<'a, RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":349},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120567,"byte_end":120573,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"RwLock","qualname":"::rwlock::RwLock","value":"lock_api::RwLock<RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" A reader-writer lock","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":351},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120707,"byte_end":120722,"line_start":93,"line_end":93,"column_start":10,"column_end":25},"name":"RwLockReadGuard","qualname":"::rwlock::RwLockReadGuard","value":"lock_api::RwLockReadGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":354},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":120877,"byte_end":120893,"line_start":97,"line_end":97,"column_start":10,"column_end":26},"name":"RwLockWriteGuard","qualname":"::rwlock::RwLockWriteGuard","value":"lock_api::RwLockWriteGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":357},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121343,"byte_end":121364,"line_start":106,"line_end":106,"column_start":10,"column_end":31},"name":"MappedRwLockReadGuard","qualname":"::rwlock::MappedRwLockReadGuard","value":"lock_api::MappedRwLockReadGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":360},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":121823,"byte_end":121845,"line_start":115,"line_end":115,"column_start":10,"column_end":32},"name":"MappedRwLockWriteGuard","qualname":"::rwlock::MappedRwLockWriteGuard","value":"lock_api::MappedRwLockWriteGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":363},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/rwlock.rs","byte_start":122007,"byte_end":122032,"line_start":119,"line_end":119,"column_start":10,"column_end":35},"name":"RwLockUpgradableReadGuard","qualname":"::rwlock::RwLockUpgradableReadGuard","value":"lock_api::RwLockUpgradableReadGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the upgradable read access of a lock when\n dropped.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2393,"byte_end":2410,"line_start":23,"line_end":23,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4710,"byte_end":4717,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17473,"byte_end":17480,"line_start":408,"line_end":408,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17579,"byte_end":17586,"line_start":415,"line_end":415,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/elision.rs","byte_start":25795,"byte_end":25806,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40248,"byte_end":40257,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41726,"byte_end":41730,"line_start":97,"line_end":97,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":49029,"byte_end":49039,"line_start":303,"line_end":303,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":50281,"byte_end":50285,"line_start":339,"line_end":339,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":50378,"byte_end":50382,"line_start":346,"line_end":346,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":55230,"byte_end":55238,"line_start":41,"line_end":41,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":56672,"byte_end":56680,"line_start":96,"line_end":96,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":57202,"byte_end":57210,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":58201,"byte_end":58209,"line_start":157,"line_end":157,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":187},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":65836,"byte_end":65845,"line_start":46,"line_end":46,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":68728,"byte_end":68737,"line_start":149,"line_end":149,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":70489,"byte_end":70498,"line_start":211,"line_end":211,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":70856,"byte_end":70865,"line_start":225,"line_end":225,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":72696,"byte_end":72705,"line_start":290,"line_end":290,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":73375,"byte_end":73384,"line_start":314,"line_end":314,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":74198,"byte_end":74207,"line_start":342,"line_end":342,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":75993,"byte_end":76002,"line_start":413,"line_end":413,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":76586,"byte_end":76595,"line_start":435,"line_end":435,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":77327,"byte_end":77336,"line_start":461,"line_end":461,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":78952,"byte_end":78961,"line_start":525,"line_end":525,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113167,"byte_end":113178,"line_start":14,"line_end":14,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/util.rs","byte_start":134535,"byte_end":134541,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":2393,"byte_end":2410,"line_start":23,"line_end":23,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":4710,"byte_end":4717,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17473,"byte_end":17480,"line_start":408,"line_end":408,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":2196}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/condvar.rs","byte_start":17579,"byte_end":17586,"line_start":415,"line_end":415,"column_start":21,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":7188}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/elision.rs","byte_start":25795,"byte_end":25806,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":2,"index":27494},"to":{"krate":0,"index":68}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":40248,"byte_end":40257,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":41726,"byte_end":41730,"line_start":97,"line_end":97,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":49029,"byte_end":49039,"line_start":303,"line_end":303,"column_start":27,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":1738}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":50281,"byte_end":50285,"line_start":339,"line_end":339,"column_start":18,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":110},"to":{"krate":2,"index":2196}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/once.rs","byte_start":50378,"byte_end":50382,"line_start":346,"line_end":346,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":110},"to":{"krate":2,"index":7188}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":55230,"byte_end":55238,"line_start":41,"line_end":41,"column_start":31,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":15,"index":30}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":56672,"byte_end":56680,"line_start":96,"line_end":96,"column_start":30,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":15,"index":36}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":57202,"byte_end":57210,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":164},"to":{"krate":15,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_mutex.rs","byte_start":58201,"byte_end":58209,"line_start":157,"line_end":157,"column_start":6,"column_end":14},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":65836,"byte_end":65845,"line_start":46,"line_end":46,"column_start":32,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":236},"to":{"krate":15,"index":412}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":68728,"byte_end":68737,"line_start":149,"line_end":149,"column_start":31,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":236},"to":{"krate":15,"index":421}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":70489,"byte_end":70498,"line_start":211,"line_end":211,"column_start":36,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":236},"to":{"krate":15,"index":426}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":70856,"byte_end":70865,"line_start":225,"line_end":225,"column_start":32,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":236},"to":{"krate":15,"index":428}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":72696,"byte_end":72705,"line_start":290,"line_end":290,"column_start":36,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":236},"to":{"krate":15,"index":435}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":73375,"byte_end":73384,"line_start":314,"line_end":314,"column_start":41,"column_end":50},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":236},"to":{"krate":15,"index":438}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":74198,"byte_end":74207,"line_start":342,"line_end":342,"column_start":34,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":236},"to":{"krate":15,"index":441}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":75993,"byte_end":76002,"line_start":413,"line_end":413,"column_start":38,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":236},"to":{"krate":15,"index":447}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":76586,"byte_end":76595,"line_start":435,"line_end":435,"column_start":43,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":236},"to":{"krate":15,"index":450}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":77327,"byte_end":77336,"line_start":461,"line_end":461,"column_start":39,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":236},"to":{"krate":15,"index":453}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/raw_rwlock.rs","byte_start":78952,"byte_end":78961,"line_start":525,"line_end":525,"column_start":6,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/remutex.rs","byte_start":113167,"byte_end":113178,"line_start":14,"line_end":14,"column_start":29,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":332},"to":{"krate":15,"index":211}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.7.1/src/util.rs","byte_start":134535,"byte_end":134541,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":2,"index":28498},"to":{"krate":0,"index":370}}]}