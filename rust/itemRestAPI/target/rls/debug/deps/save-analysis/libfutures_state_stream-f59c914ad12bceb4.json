{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1","program":"/home/mailboxhead/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_state_stream","/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=f59c914ad12bceb4","-C","extra-filename=-f59c914ad12bceb4","--out-dir","/home/mailboxhead/Documents/Practice/rust/itemRestAPI/target/rls/debug/deps","-L","dependency=/home/mailboxhead/Documents/Practice/rust/itemRestAPI/target/rls/debug/deps","--extern","futures=/home/mailboxhead/Documents/Practice/rust/itemRestAPI/target/rls/debug/deps/libfutures-7cd680100da3f0a2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mailboxhead/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mailboxhead/Documents/Practice/rust/itemRestAPI/target/rls/debug/deps/libfutures_state_stream-f59c914ad12bceb4.rmeta"},"prelude":{"crate_id":{"name":"futures_state_stream","disambiguator":[11162310781731431275,10629311868019460802]},"crate_root":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src","external_crates":[{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2594238449109249778,14329309369942547729]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6503247931848546176,1684418909180686813]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12451946389938577567,11203303662954104394]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1980447069504536921,3328628698406129621]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12646337250972192980,14741535903817127298]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6547188996294224928,5691309307804124990]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8434992999023788514,9924743992558281294]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9570316717324644387,455490368103514481]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9725046304266191696,732117948258334845]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15757291058253571364,14776181557494283724]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[17193492906632091848,9648904290961885593]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[1536109248242447287,7096802547945386663]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[12392439143515031309,6276839144763171432]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16161037957650153464,14997937726110536761]}},{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","num":15,"id":{"name":"futures","disambiguator":[10995431071446044041,17439202880562188889]}}],"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":0,"byte_end":35508,"line_start":1,"line_end":1203,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":0,"byte_end":35508,"line_start":1,"line_end":1203,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":30},{"krate":0,"index":39},{"krate":0,"index":88},{"krate":0,"index":94},{"krate":0,"index":101},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":121},{"krate":0,"index":125},{"krate":0,"index":132},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":151},{"krate":0,"index":156},{"krate":0,"index":165},{"krate":0,"index":170},{"krate":0,"index":178},{"krate":0,"index":183},{"krate":0,"index":192},{"krate":0,"index":196},{"krate":0,"index":201},{"krate":0,"index":207},{"krate":0,"index":218},{"krate":0,"index":228},{"krate":0,"index":236},{"krate":0,"index":240},{"krate":0,"index":246},{"krate":0,"index":251},{"krate":0,"index":258},{"krate":0,"index":263},{"krate":0,"index":271},{"krate":0,"index":278},{"krate":0,"index":286},{"krate":0,"index":293},{"krate":0,"index":301},{"krate":0,"index":308},{"krate":0,"index":316},{"krate":0,"index":323},{"krate":0,"index":331},{"krate":0,"index":349},{"krate":0,"index":359},{"krate":0,"index":369},{"krate":0,"index":377},{"krate":0,"index":385},{"krate":0,"index":390},{"krate":0,"index":396},{"krate":0,"index":400},{"krate":0,"index":406},{"krate":0,"index":414},{"krate":0,"index":422},{"krate":0,"index":427},{"krate":0,"index":433},{"krate":0,"index":443},{"krate":0,"index":450},{"krate":0,"index":455}],"decl_id":null,"docs":" A version of the `futures` crate's `Stream` which returns a state value when it completes.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":234,"byte_end":256,"line_start":5,"line_end":5,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":26},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":626,"byte_end":640,"line_start":18,"line_end":18,"column_start":10,"column_end":24},"name":"BoxStateStream","qualname":"::BoxStateStream","value":"Box<StateStream<Item = T, State = S, Error = E> + Send>","parent":null,"children":[],"decl_id":null,"docs":" A typedef for a type-erased `StateStream` trait object.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":33},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":815,"byte_end":819,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Next","qualname":"::StreamEvent::Next","value":"StreamEvent::Next(I)","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" The next item in the stream.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":36},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":900,"byte_end":904,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Done","qualname":"::StreamEvent::Done","value":"StreamEvent::Done(S)","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" The state of the stream, returned when streaming has completed.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":30},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":754,"byte_end":765,"line_start":21,"line_end":21,"column_start":10,"column_end":21},"name":"StreamEvent","qualname":"::StreamEvent","value":"StreamEvent::{Next, Done}","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":36}],"decl_id":null,"docs":" An event from a `StateStream`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":1004,"byte_end":1015,"line_start":29,"line_end":29,"column_start":11,"column_end":22},"name":"StateStream","qualname":"::StateStream","value":"StateStream","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87}],"decl_id":null,"docs":" A variant of `futures::Stream` which returns a state value when it completes.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":40},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":1061,"byte_end":1065,"line_start":31,"line_end":31,"column_start":10,"column_end":14},"name":"Item","qualname":"::StateStream::Item","value":"type Item;","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" The items being streamed.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":1129,"byte_end":1134,"line_start":33,"line_end":33,"column_start":10,"column_end":15},"name":"State","qualname":"::StateStream::State","value":"type State;","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" The state returned when streaming completes.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":42},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":1173,"byte_end":1178,"line_start":35,"line_end":35,"column_start":10,"column_end":15},"name":"Error","qualname":"::StateStream::Error","value":"type Error;","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" The error returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":1414,"byte_end":1418,"line_start":41,"line_end":41,"column_start":8,"column_end":12},"name":"poll","qualname":"::StateStream::poll","value":"fn (&mut self) -> Poll<StreamEvent<Self::Item, Self::State>, Self::Error>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Similar to `Stream::poll`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":1565,"byte_end":1570,"line_start":45,"line_end":45,"column_start":8,"column_end":13},"name":"boxed","qualname":"::StateStream::boxed","value":"fn (self) -> BoxStateStream<Self::Item, Self::State, Self::Error>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns this stream as a boxed trait object.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":1548,"byte_end":1557,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":1803,"byte_end":1814,"line_start":53,"line_end":53,"column_start":8,"column_end":19},"name":"into_future","qualname":"::StateStream::into_future","value":"fn (self) -> IntoFuture<Self>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a future which yields the next element of the stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":1786,"byte_end":1795,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":2031,"byte_end":2042,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::StateStream::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a normal `Stream` which yields the elements of this stream and discards the state.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":2014,"byte_end":2023,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":2230,"byte_end":2233,"line_start":69,"line_end":69,"column_start":8,"column_end":11},"name":"map","qualname":"::StateStream::map","value":"fn <F, B> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which applies a transform to items of this stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":2213,"byte_end":2222,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":2514,"byte_end":2521,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"map_err","qualname":"::StateStream::map_err","value":"fn <F, B> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which applies a transform to errors of this stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":2497,"byte_end":2506,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":2812,"byte_end":2821,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"map_state","qualname":"::StateStream::map_state","value":"fn <F, B> (self, f: F) -> MapState<Self, F>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which applies a transform to the state of this stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":2795,"byte_end":2804,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":3119,"byte_end":3125,"line_start":105,"line_end":105,"column_start":8,"column_end":14},"name":"filter","qualname":"::StateStream::filter","value":"fn <F> (self, f: F) -> Filter<Self, F>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which filters items of this stream by a predicate.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":3102,"byte_end":3111,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":3427,"byte_end":3437,"line_start":117,"line_end":117,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::StateStream::filter_map","value":"fn <F, B> (self, f: F) -> FilterMap<Self, F>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which filters and transforms items of this stream by a predicate.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":3410,"byte_end":3419,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":3746,"byte_end":3750,"line_start":130,"line_end":130,"column_start":8,"column_end":12},"name":"then","qualname":"::StateStream::then","value":"fn <F, U> (self, f: F) -> Then<Self, F, U>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which transforms results of this stream into a new future.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":3729,"byte_end":3738,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":4166,"byte_end":4174,"line_start":145,"line_end":145,"column_start":8,"column_end":16},"name":"and_then","qualname":"::StateStream::and_then","value":"fn <F, U> (self, f: F) -> AndThen<Self, F, U>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which transforms items of this stream into a new future.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":4149,"byte_end":4158,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":4579,"byte_end":4593,"line_start":160,"line_end":160,"column_start":8,"column_end":22},"name":"and_then_state","qualname":"::StateStream::and_then_state","value":"fn <F, U> (self, f: F) -> AndThenState<Self, F, U>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which transforms the state of this stream into a new future.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":4562,"byte_end":4571,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":5006,"byte_end":5013,"line_start":175,"line_end":175,"column_start":8,"column_end":15},"name":"or_else","qualname":"::StateStream::or_else","value":"fn <F, U> (self, f: F) -> OrElse<Self, F, U>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which transforms errors of this stream into a new future.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":4989,"byte_end":4998,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":5438,"byte_end":5445,"line_start":190,"line_end":190,"column_start":8,"column_end":15},"name":"collect","qualname":"::StateStream::collect","value":"fn (self) -> Collect<Self>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which collects all items of this stream into a `Vec`, returning it along\n with the stream's state.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":5421,"byte_end":5430,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":5683,"byte_end":5687,"line_start":201,"line_end":201,"column_start":8,"column_end":12},"name":"fold","qualname":"::StateStream::fold","value":"fn <T, F, Fut, G, Fut2> (self, init: T, next: F, done: G) -> Fold<Self, T, F, Fut, G, Fut2>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Applies a fold across all elements of this stream and its state.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":5666,"byte_end":5675,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":6322,"byte_end":6332,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::StateStream::skip_while","value":"fn <P, R> (self, pred: P) -> SkipWhile<Self, P, R>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which skips initial elements matching a predicate.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":6305,"byte_end":6314,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":6759,"byte_end":6767,"line_start":234,"line_end":234,"column_start":8,"column_end":16},"name":"for_each","qualname":"::StateStream::for_each","value":"fn <F> (self, f: F) -> ForEach<Self, F>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a future which applies a closure to each item of this stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":6742,"byte_end":6751,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":7070,"byte_end":7082,"line_start":246,"line_end":246,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::StateStream::catch_unwind","value":"fn (self) -> CatchUnwind<Self>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a future which catches panics generated by this stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":7053,"byte_end":7062,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":7288,"byte_end":7296,"line_start":254,"line_end":254,"column_start":8,"column_end":16},"name":"buffered","qualname":"::StateStream::buffered","value":"fn (self, amt: usize) -> Buffered<Self>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which buffers a fixed number of items of this stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":7271,"byte_end":7280,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":7781,"byte_end":7799,"line_start":270,"line_end":270,"column_start":8,"column_end":26},"name":"buffered_unordered","qualname":"::StateStream::buffered_unordered","value":"fn (self, amt: usize) -> BufferedUnordered<Self>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns a stream which buffers a fixed number of items of this stream, returning them out\n of order as they become ready.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":7764,"byte_end":7773,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":107},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9128,"byte_end":9137,"line_start":329,"line_end":329,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":108}],"decl_id":null,"docs":" An extension trait adding functionality to `Future`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9253,"byte_end":9273,"line_start":332,"line_end":332,"column_start":8,"column_end":28},"name":"flatten_state_stream","qualname":"::FutureExt::flatten_state_stream","value":"fn (self) -> FlattenStateStream<Self>","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":" Returns a stream which evaluates this future and then the resulting stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9236,"byte_end":9245,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":111},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9598,"byte_end":9607,"line_start":345,"line_end":345,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":112}],"decl_id":null,"docs":" An extension trait adding functionality to `Stream`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9724,"byte_end":9741,"line_start":348,"line_end":348,"column_start":8,"column_end":25},"name":"into_state_stream","qualname":"::StreamExt::into_state_stream","value":"fn (self) -> FromStream<Self>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Returns a `StateStream` yielding the items of this stream with a unit state.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9707,"byte_end":9716,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9983,"byte_end":9989,"line_start":361,"line_end":361,"column_start":8,"column_end":14},"name":"unfold","qualname":"::unfold","value":"fn <T, F, Fut, It, St> (init: T, f: F) -> Unfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream produced by iteratively applying a closure to a state.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9966,"byte_end":9975,"line_start":360,"line_end":360,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":121},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":10294,"byte_end":10304,"line_start":372,"line_end":372,"column_start":12,"column_end":22},"name":"FromStream","qualname":"::FromStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `StateStream` yielding elements of a normal `Stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":132},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":10885,"byte_end":10895,"line_start":394,"line_end":394,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::IntoFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future yielding the next element of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":141},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":11658,"byte_end":11668,"line_start":418,"line_end":418,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::IntoStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` yielding the elements of a `StateStream` and discarding its state.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":151},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":12234,"byte_end":12237,"line_start":439,"line_end":439,"column_start":12,"column_end":15},"name":"Map","qualname":"::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"decl_id":null,"docs":" A stream which applies a transform to the elements of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":165},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":12944,"byte_end":12950,"line_start":465,"line_end":465,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" A stream which applies a transform to the errors of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":13444,"byte_end":13452,"line_start":488,"line_end":488,"column_start":12,"column_end":20},"name":"MapState","qualname":"::MapState","value":"MapState {  }","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"decl_id":null,"docs":" A stream which applies a transform to the state of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":192},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":14275,"byte_end":14282,"line_start":517,"line_end":517,"column_start":12,"column_end":19},"name":"Collect","qualname":"::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"decl_id":null,"docs":" A future which collects the items of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":201},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":15131,"byte_end":15137,"line_start":547,"line_end":547,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"decl_id":null,"docs":" A stream which iteratively applies a closure to state to produce items.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":236},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":16898,"byte_end":16916,"line_start":605,"line_end":605,"column_start":12,"column_end":30},"name":"FlattenStateStream","qualname":"::FlattenStateStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream which evaluates a futures and then then stream returned by it.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":17907,"byte_end":17913,"line_start":634,"line_end":634,"column_start":12,"column_end":18},"name":"Filter","qualname":"::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"decl_id":null,"docs":" A stream which applies a filter to the items of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":258},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":18634,"byte_end":18643,"line_start":663,"line_end":663,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" A stream which applies a filter and transform to items of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":271},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":19541,"byte_end":19545,"line_start":695,"line_end":695,"column_start":12,"column_end":16},"name":"Then","qualname":"::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"decl_id":null,"docs":" A stream which applies a transform to results of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":286},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":20975,"byte_end":20982,"line_start":741,"line_end":741,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"decl_id":null,"docs":" A stream which applies a transform to items of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":22220,"byte_end":22232,"line_start":782,"line_end":782,"column_start":12,"column_end":24},"name":"AndThenState","qualname":"::AndThenState","value":"AndThenState {  }","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"decl_id":null,"docs":" A stream which applies a transform to the state of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":316},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":23471,"byte_end":23477,"line_start":823,"line_end":823,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"decl_id":null,"docs":" A stream which applies a transform to errors of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":349},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":25073,"byte_end":25077,"line_start":878,"line_end":878,"column_start":12,"column_end":16},"name":"Fold","qualname":"::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358}],"decl_id":null,"docs":" A future which applies closures over each item of a stream and its state.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":27498,"byte_end":27507,"line_start":942,"line_end":942,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"decl_id":null,"docs":" A stream which skips initial items of a stream matching a predicate.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":29041,"byte_end":29048,"line_start":994,"line_end":994,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"decl_id":null,"docs":" A future which applies a closure to each item of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":396},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":29616,"byte_end":29627,"line_start":1018,"line_end":1018,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::CatchUnwind","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream which catches panics generated by a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":422},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":30642,"byte_end":30650,"line_start":1055,"line_end":1055,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426}],"decl_id":null,"docs":" A stream which buffers items of a stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":450},"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":33074,"byte_end":33091,"line_start":1134,"line_end":1134,"column_start":12,"column_end":29},"name":"BufferedUnordered","qualname":"::BufferedUnordered","value":"BufferedUnordered {  }","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"decl_id":null,"docs":" A stream which buffers items of a stream, returning them as they become ready.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":8283,"byte_end":8286,"line_start":289,"line_end":289,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":8814,"byte_end":8830,"line_start":315,"line_end":315,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9505,"byte_end":9506,"line_start":340,"line_end":340,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9864,"byte_end":9865,"line_start":355,"line_end":355,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":10337,"byte_end":10347,"line_start":374,"line_end":374,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":10931,"byte_end":10941,"line_start":396,"line_end":396,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":11696,"byte_end":11706,"line_start":420,"line_end":420,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":12304,"byte_end":12307,"line_start":444,"line_end":444,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":13017,"byte_end":13023,"line_start":470,"line_end":470,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":13527,"byte_end":13535,"line_start":493,"line_end":493,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":14375,"byte_end":14382,"line_start":524,"line_end":524,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":15351,"byte_end":15357,"line_start":561,"line_end":561,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":16994,"byte_end":17012,"line_start":608,"line_end":608,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":17977,"byte_end":17983,"line_start":639,"line_end":639,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":18710,"byte_end":18719,"line_start":668,"line_end":668,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":19676,"byte_end":19680,"line_start":703,"line_end":703,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":21113,"byte_end":21120,"line_start":749,"line_end":749,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":22363,"byte_end":22375,"line_start":790,"line_end":790,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":23608,"byte_end":23614,"line_start":831,"line_end":831,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":25284,"byte_end":25288,"line_start":887,"line_end":887,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":27694,"byte_end":27703,"line_start":952,"line_end":952,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":29107,"byte_end":29114,"line_start":999,"line_end":999,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":29660,"byte_end":29671,"line_start":1020,"line_end":1020,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":30895,"byte_end":30903,"line_start":1064,"line_end":1064,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":33340,"byte_end":33357,"line_start":1143,"line_end":1143,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":8283,"byte_end":8286,"line_start":289,"line_end":289,"column_start":33,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":8814,"byte_end":8830,"line_start":315,"line_end":315,"column_start":25,"column_end":41},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":3591},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9139,"byte_end":9145,"line_start":329,"line_end":329,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":15,"index":477},"to":{"krate":0,"index":107}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9505,"byte_end":9506,"line_start":340,"line_end":340,"column_start":31,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":110},"to":{"krate":0,"index":107}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9609,"byte_end":9615,"line_start":345,"line_end":345,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":15,"index":1439},"to":{"krate":0,"index":111}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":9864,"byte_end":9865,"line_start":355,"line_end":355,"column_start":31,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":114},"to":{"krate":0,"index":111}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":10337,"byte_end":10347,"line_start":374,"line_end":374,"column_start":25,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":121},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":10931,"byte_end":10941,"line_start":396,"line_end":396,"column_start":20,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":132},"to":{"krate":15,"index":477}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":11696,"byte_end":11706,"line_start":420,"line_end":420,"column_start":20,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":141},"to":{"krate":15,"index":1439}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":12304,"byte_end":12307,"line_start":444,"line_end":444,"column_start":31,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":151},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":13017,"byte_end":13023,"line_start":470,"line_end":470,"column_start":31,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":165},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":13527,"byte_end":13535,"line_start":493,"line_end":493,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":178},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":14375,"byte_end":14382,"line_start":524,"line_end":524,"column_start":20,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":192},"to":{"krate":15,"index":477}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":15351,"byte_end":15357,"line_start":561,"line_end":561,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":201},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":16994,"byte_end":17012,"line_start":608,"line_end":608,"column_start":25,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":236},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":17977,"byte_end":17983,"line_start":639,"line_end":639,"column_start":28,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":246},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":18710,"byte_end":18719,"line_start":668,"line_end":668,"column_start":31,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":258},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":19676,"byte_end":19680,"line_start":703,"line_end":703,"column_start":31,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":271},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":21113,"byte_end":21120,"line_start":749,"line_end":749,"column_start":31,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":286},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":22363,"byte_end":22375,"line_start":790,"line_end":790,"column_start":31,"column_end":43},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":23608,"byte_end":23614,"line_start":831,"line_end":831,"column_start":31,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":316},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":25284,"byte_end":25288,"line_start":887,"line_end":887,"column_start":40,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":349},"to":{"krate":15,"index":477}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":27694,"byte_end":27703,"line_start":952,"line_end":952,"column_start":31,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":369},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":29107,"byte_end":29114,"line_start":999,"line_end":999,"column_start":23,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":385},"to":{"krate":15,"index":477}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":29660,"byte_end":29671,"line_start":1020,"line_end":1020,"column_start":25,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":396},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":30895,"byte_end":30903,"line_start":1064,"line_end":1064,"column_start":25,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":422},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mailboxhead/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-state-stream-0.1.1/src/lib.rs","byte_start":33340,"byte_end":33357,"line_start":1143,"line_end":1143,"column_start":25,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":450},"to":{"krate":0,"index":39}}]}